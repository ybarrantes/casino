// <auto-generated />
using System;
using Casino.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Casino.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200406040332_RouletteTypeNumbersSeeder-Seed")]
    partial class RouletteTypeNumbersSeederSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Casino.Data.Models.Entities.AccountTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("UserAccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserRegisterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserAccountId");

                    b.HasIndex("UserRegisterId");

                    b.ToTable("AccountTransactions");
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.AccountTransactionState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccountTransactionStates");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(587),
                            State = "Approved",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(1107)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(1614),
                            State = "Pending",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(1624)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(1632),
                            State = "Cancelled",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(1633)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(1635),
                            State = "Rejected",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(1636)
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.AccountTransactionType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccountTransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(7098),
                            Type = "Deposit",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(7616)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(8128),
                            Type = "Withdrawal",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(8142)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(8150),
                            Type = "Bet",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(8151)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(8152),
                            Type = "Bonus",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 774, DateTimeKind.Local).AddTicks(8153)
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "None"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Black"
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.Number", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ColorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("Numbers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ColorId = 1L,
                            Name = "0"
                        },
                        new
                        {
                            Id = 2L,
                            ColorId = 1L,
                            Name = "00"
                        },
                        new
                        {
                            Id = 3L,
                            ColorId = 1L,
                            Name = "000"
                        },
                        new
                        {
                            Id = 4L,
                            ColorId = 2L,
                            Name = "1"
                        },
                        new
                        {
                            Id = 5L,
                            ColorId = 3L,
                            Name = "2"
                        },
                        new
                        {
                            Id = 6L,
                            ColorId = 2L,
                            Name = "3"
                        },
                        new
                        {
                            Id = 7L,
                            ColorId = 3L,
                            Name = "4"
                        },
                        new
                        {
                            Id = 8L,
                            ColorId = 2L,
                            Name = "5"
                        },
                        new
                        {
                            Id = 9L,
                            ColorId = 3L,
                            Name = "6"
                        },
                        new
                        {
                            Id = 10L,
                            ColorId = 2L,
                            Name = "7"
                        },
                        new
                        {
                            Id = 11L,
                            ColorId = 3L,
                            Name = "8"
                        },
                        new
                        {
                            Id = 12L,
                            ColorId = 2L,
                            Name = "9"
                        },
                        new
                        {
                            Id = 13L,
                            ColorId = 3L,
                            Name = "10"
                        },
                        new
                        {
                            Id = 14L,
                            ColorId = 3L,
                            Name = "11"
                        },
                        new
                        {
                            Id = 15L,
                            ColorId = 2L,
                            Name = "12"
                        },
                        new
                        {
                            Id = 16L,
                            ColorId = 3L,
                            Name = "13"
                        },
                        new
                        {
                            Id = 17L,
                            ColorId = 2L,
                            Name = "14"
                        },
                        new
                        {
                            Id = 18L,
                            ColorId = 3L,
                            Name = "15"
                        },
                        new
                        {
                            Id = 19L,
                            ColorId = 2L,
                            Name = "16"
                        },
                        new
                        {
                            Id = 20L,
                            ColorId = 3L,
                            Name = "17"
                        },
                        new
                        {
                            Id = 21L,
                            ColorId = 2L,
                            Name = "18"
                        },
                        new
                        {
                            Id = 22L,
                            ColorId = 2L,
                            Name = "19"
                        },
                        new
                        {
                            Id = 23L,
                            ColorId = 3L,
                            Name = "20"
                        },
                        new
                        {
                            Id = 24L,
                            ColorId = 2L,
                            Name = "21"
                        },
                        new
                        {
                            Id = 25L,
                            ColorId = 3L,
                            Name = "22"
                        },
                        new
                        {
                            Id = 26L,
                            ColorId = 2L,
                            Name = "23"
                        },
                        new
                        {
                            Id = 27L,
                            ColorId = 3L,
                            Name = "24"
                        },
                        new
                        {
                            Id = 28L,
                            ColorId = 2L,
                            Name = "25"
                        },
                        new
                        {
                            Id = 29L,
                            ColorId = 3L,
                            Name = "26"
                        },
                        new
                        {
                            Id = 30L,
                            ColorId = 2L,
                            Name = "27"
                        },
                        new
                        {
                            Id = 31L,
                            ColorId = 3L,
                            Name = "28"
                        },
                        new
                        {
                            Id = 32L,
                            ColorId = 3L,
                            Name = "29"
                        },
                        new
                        {
                            Id = 33L,
                            ColorId = 2L,
                            Name = "30"
                        },
                        new
                        {
                            Id = 34L,
                            ColorId = 3L,
                            Name = "31"
                        },
                        new
                        {
                            Id = 35L,
                            ColorId = 2L,
                            Name = "32"
                        },
                        new
                        {
                            Id = 36L,
                            ColorId = 3L,
                            Name = "33"
                        },
                        new
                        {
                            Id = 37L,
                            ColorId = 2L,
                            Name = "34"
                        },
                        new
                        {
                            Id = 38L,
                            ColorId = 3L,
                            Name = "35"
                        },
                        new
                        {
                            Id = 39L,
                            ColorId = 2L,
                            Name = "36"
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.Roulette", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("UserRegisterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserRegisterId");

                    b.ToTable("Roulettes");
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RouletteRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Pay")
                        .HasColumnType("real");

                    b.Property<long>("RouletteId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RouletteId");

                    b.HasIndex("TypeId");

                    b.ToTable("RouletteRules");
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RouletteRuleType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<float>("DefaultPay")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Numbers")
                        .HasColumnType("tinyint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("RouletteRuleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DefaultPay = 1f,
                            Name = "Red",
                            Numbers = (byte)18,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            DefaultPay = 1f,
                            Name = "Black",
                            Numbers = (byte)18,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            DefaultPay = 1f,
                            Name = "Odd",
                            Numbers = (byte)18,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            DefaultPay = 1f,
                            Name = "Even",
                            Numbers = (byte)18,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            DefaultPay = 1f,
                            Name = "1 to 18",
                            Numbers = (byte)18,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            DefaultPay = 1f,
                            Name = "19 to 36",
                            Numbers = (byte)18,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            DefaultPay = 2f,
                            Name = "1 to 12",
                            Numbers = (byte)12,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            DefaultPay = 2f,
                            Name = "13 to 24",
                            Numbers = (byte)12,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            DefaultPay = 2f,
                            Name = "25 to 36",
                            Numbers = (byte)12,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            DefaultPay = 5f,
                            Name = "Six line",
                            Numbers = (byte)6,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            DefaultPay = 6f,
                            Name = "First five",
                            Numbers = (byte)5,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            DefaultPay = 8f,
                            Name = "Corner",
                            Numbers = (byte)4,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            DefaultPay = 11f,
                            Name = "Street",
                            Numbers = (byte)3,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            DefaultPay = 17f,
                            Name = "Split",
                            Numbers = (byte)2,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            DefaultPay = 35f,
                            Name = "One",
                            Numbers = (byte)1,
                            TypeId = 1L
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RouletteState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RouletteStates");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 769, DateTimeKind.Local).AddTicks(2098),
                            State = "Active",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 770, DateTimeKind.Local).AddTicks(745)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 770, DateTimeKind.Local).AddTicks(1391),
                            State = "Inactive",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 770, DateTimeKind.Local).AddTicks(1405)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 770, DateTimeKind.Local).AddTicks(1412),
                            State = "Suspended",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 770, DateTimeKind.Local).AddTicks(1413)
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RouletteType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RouletteTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 771, DateTimeKind.Local).AddTicks(6527),
                            Type = "European",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 771, DateTimeKind.Local).AddTicks(7056)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 771, DateTimeKind.Local).AddTicks(7571),
                            Type = "American",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 771, DateTimeKind.Local).AddTicks(7587)
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RouletteTypeNumber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("NumberId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NumberId");

                    b.HasIndex("TypeId");

                    b.ToTable("RouletteTypeNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            NumberId = 1L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            NumberId = 4L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            NumberId = 5L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            NumberId = 6L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            NumberId = 7L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            NumberId = 8L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            NumberId = 9L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            NumberId = 10L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            NumberId = 11L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            NumberId = 12L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            NumberId = 13L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            NumberId = 14L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            NumberId = 15L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            NumberId = 16L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            NumberId = 17L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 16L,
                            NumberId = 18L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 17L,
                            NumberId = 19L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 18L,
                            NumberId = 20L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 19L,
                            NumberId = 21L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 20L,
                            NumberId = 22L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 21L,
                            NumberId = 23L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 22L,
                            NumberId = 24L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 23L,
                            NumberId = 25L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 24L,
                            NumberId = 26L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 25L,
                            NumberId = 27L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 26L,
                            NumberId = 28L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 27L,
                            NumberId = 29L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 28L,
                            NumberId = 30L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 29L,
                            NumberId = 31L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 30L,
                            NumberId = 32L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 31L,
                            NumberId = 33L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 32L,
                            NumberId = 34L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 33L,
                            NumberId = 35L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 34L,
                            NumberId = 36L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 35L,
                            NumberId = 37L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 36L,
                            NumberId = 38L,
                            TypeId = 1L
                        },
                        new
                        {
                            Id = 37L,
                            NumberId = 39L,
                            TypeId = 1L
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.Round", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("RouletteId")
                        .HasColumnType("bigint");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserCloseId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserOpenId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WinNumberId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RouletteId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserCloseId");

                    b.HasIndex("UserOpenId");

                    b.HasIndex("WinNumberId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RoundState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoundStates");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(2226),
                            State = "Opened",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(2744)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(3254),
                            State = "Closed",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(3265)
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CloudIdentityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.UserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("UserOwnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserOwnerId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.UserAccountState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserAccountStates");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(8270),
                            State = "Active",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(8885)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(9397),
                            State = "Inactive",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(9408)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(9416),
                            State = "Suspended",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 772, DateTimeKind.Local).AddTicks(9418)
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.UserAccountType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserAccountTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 773, DateTimeKind.Local).AddTicks(3973),
                            Type = "Free",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 773, DateTimeKind.Local).AddTicks(4484)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 773, DateTimeKind.Local).AddTicks(4996),
                            Type = "Real",
                            UpdatedAt = new DateTime(2020, 4, 5, 23, 3, 31, 773, DateTimeKind.Local).AddTicks(5007)
                        });
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.AccountTransaction", b =>
                {
                    b.HasOne("Casino.Data.Models.Entities.AccountTransactionState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.AccountTransactionType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.UserAccount", "UserAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.User", "UserRegister")
                        .WithMany()
                        .HasForeignKey("UserRegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.Number", b =>
                {
                    b.HasOne("Casino.Data.Models.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.Roulette", b =>
                {
                    b.HasOne("Casino.Data.Models.Entities.RouletteState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.RouletteType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.User", "UserRegister")
                        .WithMany()
                        .HasForeignKey("UserRegisterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RouletteRule", b =>
                {
                    b.HasOne("Casino.Data.Models.Entities.Roulette", "Roulette")
                        .WithMany()
                        .HasForeignKey("RouletteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.RouletteRuleType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RouletteRuleType", b =>
                {
                    b.HasOne("Casino.Data.Models.Entities.RouletteType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.RouletteTypeNumber", b =>
                {
                    b.HasOne("Casino.Data.Models.Entities.Number", "Number")
                        .WithMany()
                        .HasForeignKey("NumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.RouletteType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.Round", b =>
                {
                    b.HasOne("Casino.Data.Models.Entities.Roulette", "Roulette")
                        .WithMany("Rounds")
                        .HasForeignKey("RouletteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.RoundState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.User", "UserClose")
                        .WithMany()
                        .HasForeignKey("UserCloseId");

                    b.HasOne("Casino.Data.Models.Entities.User", "UserOpen")
                        .WithMany()
                        .HasForeignKey("UserOpenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.Number", "WinNumber")
                        .WithMany()
                        .HasForeignKey("WinNumberId");
                });

            modelBuilder.Entity("Casino.Data.Models.Entities.UserAccount", b =>
                {
                    b.HasOne("Casino.Data.Models.Entities.UserAccountState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.UserAccountType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Casino.Data.Models.Entities.User", "UserOwner")
                        .WithMany("Accounts")
                        .HasForeignKey("UserOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
